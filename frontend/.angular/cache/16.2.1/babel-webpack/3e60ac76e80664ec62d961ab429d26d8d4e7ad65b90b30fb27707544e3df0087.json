{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChannelService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8080/tinyslack/';\n    this.options = {\n      headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\n    };\n  }\n  getChannels() {\n    return this.http.get(this.url + 'channels');\n  }\n  getChannelByName(name) {\n    return this.http.get(this.url + 'channels/' + name);\n  }\n}\n_class = ChannelService;\n_class.ɵfac = function ChannelService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","ChannelService","constructor","http","url","options","headers","set","getChannels","get","getChannelByName","name","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\Service\\channel.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ChannelService {\r\n  url = 'http://localhost:8080/tinyslack/';\r\n\r\n  options = {\r\n    headers: new HttpHeaders().set(\r\n      'Content-Type',\r\n      'application/x-www-form-urlencoded'\r\n    ),\r\n  };\r\n  \r\n  constructor(private http: HttpClient) {}\r\n\r\n  getChannels() {\r\n    return this.http.get(this.url + 'channels');\r\n  }\r\n\r\n  getChannelByName(name: string) {\r\n    return this.http.get(this.url + 'channels/' + name);\r\n  }\r\n}"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,cAAc;EAUzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IATxB,KAAAC,GAAG,GAAG,kCAAkC;IAExC,KAAAC,OAAO,GAAG;MACRC,OAAO,EAAE,IAAIN,WAAW,EAAE,CAACO,GAAG,CAC5B,cAAc,EACd,mCAAmC;KAEtC;EAEsC;EAEvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACL,GAAG,GAAG,UAAU,CAAC;EAC7C;EAEAM,gBAAgBA,CAACC,IAAY;IAC3B,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,IAAI,CAACL,GAAG,GAAG,WAAW,GAAGO,IAAI,CAAC;EACrD;;SAlBWV,cAAc;;mBAAdA,MAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdd,MAAc;EAAAe,OAAA,EAAdf,MAAc,CAAAgB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}