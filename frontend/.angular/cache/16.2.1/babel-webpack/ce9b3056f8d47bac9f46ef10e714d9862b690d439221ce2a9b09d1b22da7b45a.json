{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let ProfileComponent = class ProfileComponent {\n  constructor(fb, userService) {\n    this.fb = fb;\n    this.userService = userService;\n    this.toggleBool = true;\n    this.isInputVisible = false;\n    this.currentUser = this.userService.getCurrentUser();\n    this.updateForm = this.fb.group({\n      userName: [this.currentUser?.userName, [Validators.maxLength(20)]],\n      userMail: [this.currentUser?.userMail, [Validators.email]],\n      password: [this.currentUser?.password, [Validators.minLength(5)]],\n      userId: [this.currentUser?.userId]\n    });\n  }\n  deleteUser() {\n    this.userService.deleteUser(this.currentUser?.userName).subscribe();\n  }\n  updateUser() {\n    if (this.currentUser !== null) {\n      this.userService.updateUser(this.currentUser.userId, this.currentUser).subscribe();\n    } else {\n      console.log(\"L'id est null !\");\n    }\n  }\n  onSubmit(event) {\n    if (this.updateForm.valid) {\n      const formValue = this.updateForm.value;\n      this.userService.updateUser(formValue.userId, formValue).subscribe(response => {\n        this.isInputVisible = false;\n        alert('Vos informations on étaient mises à jour');\n        console.log('Les information ont été mises à jour :', response);\n      }, error => {\n        alert('Une erreur est survenue lors de la modification');\n        console.error('Erreur lors de la modification :', error);\n      });\n    } else {\n      alert('Le formulaire de la modification est invalide');\n      console.log('Le formulaire de la modification est invalide');\n    }\n  }\n  visibilityInput() {\n    this.isInputVisible = true;\n  }\n  // Function pour déverrouiller le bouton supprimer profil\n  changeEvent(event) {\n    if (event.target.checked) {\n      this.toggleBool = false;\n    } else {\n      this.toggleBool = true;\n    }\n  }\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})], ProfileComponent);","map":{"version":3,"names":["Component","Validators","ProfileComponent","constructor","fb","userService","toggleBool","isInputVisible","currentUser","getCurrentUser","updateForm","group","userName","maxLength","userMail","email","password","minLength","userId","deleteUser","subscribe","updateUser","console","log","onSubmit","event","valid","formValue","value","response","alert","error","visibilityInput","changeEvent","target","checked","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\profile\\profile.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Users } from 'src/app/Model/users';\r\nimport { UserService } from 'src/app/Service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent {\r\n  currentUser: Users | null;\r\n  toggleBool: boolean=true;\r\n  isInputVisible: boolean = false;\r\n  updateForm: FormGroup;\r\n  \r\n\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService) {\r\n    this.currentUser = this.userService.getCurrentUser();    \r\n    this.updateForm = this.fb.group({\r\n      userName: [this.currentUser?.userName, [ Validators.maxLength(20)]],\r\n      userMail: [this.currentUser?.userMail,  [Validators.email]],\r\n      password: [this.currentUser?.password, [Validators.minLength(5)]],      \r\n      userId : [this.currentUser?.userId]\r\n    });\r\n  }\r\n\r\n  deleteUser(){\r\n    this.userService.deleteUser(this.currentUser?.userName).subscribe();\r\n  }\r\n\r\n  updateUser(){\r\n    if (this.currentUser !== null){\r\n    this.userService.updateUser(this.currentUser.userId, this.currentUser).subscribe();\r\n    } else {\r\n      console.log(\"L'id est null !\");\r\n      \r\n    }\r\n  }\r\n  \r\n  onSubmit(event: Event) {\r\n    if (this.updateForm.valid) {\r\n      const formValue: Users = this.updateForm.value;\r\n\r\n      this.userService.updateUser(formValue.userId, formValue).subscribe(\r\n        (response: Users) => {\r\n          this.isInputVisible = false;\r\n          alert('Vos informations on étaient mises à jour');\r\n          console.log('Les information ont été mises à jour :', response);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          alert('Une erreur est survenue lors de la modification');\r\n          console.error('Erreur lors de la modification :', error);\r\n        }\r\n      );\r\n    } else {\r\n      alert('Le formulaire de la modification est invalide');\r\n      console.log('Le formulaire de la modification est invalide');\r\n    }\r\n  }\r\n  \r\n  visibilityInput(){\r\n    this.isInputVisible = true;\r\n  }\r\n  \r\n// Function pour déverrouiller le bouton supprimer profil\r\n changeEvent(event: any) {\r\n        if (event.target.checked) {\r\n            this.toggleBool= false;\r\n        }\r\n        else {\r\n            this.toggleBool= true;\r\n        }\r\n    }\r\n}\r\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAS5D,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAQ3BC,YAAoBC,EAAe,EAAUC,WAAwB;IAAjD,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IANxD,KAAAC,UAAU,GAAU,IAAI;IACxB,KAAAC,cAAc,GAAY,KAAK;IAM7B,IAAI,CAACC,WAAW,GAAG,IAAI,CAACH,WAAW,CAACI,cAAc,EAAE;IACpD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MAC9BC,QAAQ,EAAE,CAAC,IAAI,CAACJ,WAAW,EAAEI,QAAQ,EAAE,CAAEX,UAAU,CAACY,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACnEC,QAAQ,EAAE,CAAC,IAAI,CAACN,WAAW,EAAEM,QAAQ,EAAG,CAACb,UAAU,CAACc,KAAK,CAAC,CAAC;MAC3DC,QAAQ,EAAE,CAAC,IAAI,CAACR,WAAW,EAAEQ,QAAQ,EAAE,CAACf,UAAU,CAACgB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACjEC,MAAM,EAAG,CAAC,IAAI,CAACV,WAAW,EAAEU,MAAM;KACnC,CAAC;EACJ;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACd,WAAW,CAACc,UAAU,CAAC,IAAI,CAACX,WAAW,EAAEI,QAAQ,CAAC,CAACQ,SAAS,EAAE;EACrE;EAEAC,UAAUA,CAAA;IACR,IAAI,IAAI,CAACb,WAAW,KAAK,IAAI,EAAC;MAC9B,IAAI,CAACH,WAAW,CAACgB,UAAU,CAAC,IAAI,CAACb,WAAW,CAACU,MAAM,EAAE,IAAI,CAACV,WAAW,CAAC,CAACY,SAAS,EAAE;KACjF,MAAM;MACLE,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;;EAGlC;EAEAC,QAAQA,CAACC,KAAY;IACnB,IAAI,IAAI,CAACf,UAAU,CAACgB,KAAK,EAAE;MACzB,MAAMC,SAAS,GAAU,IAAI,CAACjB,UAAU,CAACkB,KAAK;MAE9C,IAAI,CAACvB,WAAW,CAACgB,UAAU,CAACM,SAAS,CAACT,MAAM,EAAES,SAAS,CAAC,CAACP,SAAS,CAC/DS,QAAe,IAAI;QAClB,IAAI,CAACtB,cAAc,GAAG,KAAK;QAC3BuB,KAAK,CAAC,0CAA0C,CAAC;QACjDR,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEM,QAAQ,CAAC;MACjE,CAAC,EACAE,KAAwB,IAAI;QAC3BD,KAAK,CAAC,iDAAiD,CAAC;QACxDR,OAAO,CAACS,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D,CAAC,CACF;KACF,MAAM;MACLD,KAAK,CAAC,+CAA+C,CAAC;MACtDR,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;;EAEhE;EAEAS,eAAeA,CAAA;IACb,IAAI,CAACzB,cAAc,GAAG,IAAI;EAC5B;EAEF;EACC0B,WAAWA,CAACR,KAAU;IACf,IAAIA,KAAK,CAACS,MAAM,CAACC,OAAO,EAAE;MACtB,IAAI,CAAC7B,UAAU,GAAE,KAAK;KACzB,MACI;MACD,IAAI,CAACA,UAAU,GAAE,IAAI;;EAE7B;CACH;AAjEYJ,gBAAgB,GAAAkC,UAAA,EAL5BpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWrC,gBAAgB,CAiE5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}