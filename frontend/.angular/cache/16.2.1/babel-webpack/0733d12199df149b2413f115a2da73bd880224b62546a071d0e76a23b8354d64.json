{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Service/channel.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ListChannelComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const channel_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(channel_r1.channelName);\n  }\n}\nexport class ListChannelComponent {\n  constructor(ch, route) {\n    this.ch = ch;\n    this.route = route;\n    this.channels = [];\n    this.ch.getChannels().subscribe(data => {\n      // à chaque fois on va recevoir des donnees, on les mets dans notre tableau channels qui est de type CHannels( Model)\n      this.channels = data;\n    });\n  }\n}\n_class = ListChannelComponent;\n_class.ɵfac = function ListChannelComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ChannelService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-list-channel\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function ListChannelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Channels List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\");\n      i0.ɵɵtemplate(3, ListChannelComponent_div_3_Template, 3, 1, \"div\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.channels);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","channel_r1","channelName","ListChannelComponent","constructor","ch","route","channels","getChannels","subscribe","data","ɵɵdirectiveInject","i1","ChannelService","i2","Router","selectors","decls","vars","consts","template","ListChannelComponent_Template","rf","ctx","ɵɵtemplate","ListChannelComponent_div_3_Template","ɵɵproperty"],"sources":["C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\list-channel\\list-channel.component.ts","C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\list-channel\\list-channel.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Channels } from 'src/app/Model/channels';\r\nimport { ChannelService } from 'src/app/Service/channel.service';\r\n\r\n@Component({\r\n  selector: 'app-list-channel',\r\n  templateUrl: './list-channel.component.html',\r\n  styleUrls: ['./list-channel.component.css'],\r\n})\r\nexport class ListChannelComponent {\r\n  channels: Channels[] = [];\r\n\r\n  constructor(private ch: ChannelService, private route: Router) {\r\n    this.ch.getChannels().subscribe((data: any) => {\r\n      // à chaque fois on va recevoir des donnees, on les mets dans notre tableau channels qui est de type CHannels( Model)\r\n      this.channels = data;\r\n    });\r\n  }\r\n}","<h1>Channels List</h1>\r\n<ul>\r\n  <div *ngFor=\"let channel of channels\">\r\n    <li>{{ channel.channelName }}</li>\r\n  </div>\r\n</ul>"],"mappings":";;;;;;;ICEEA,EAAA,CAAAC,cAAA,UAAsC;IAChCD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAA9BH,EAAA,CAAAI,SAAA,GAAyB;IAAzBJ,EAAA,CAAAK,iBAAA,CAAAC,UAAA,CAAAC,WAAA,CAAyB;;;ADOjC,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,EAAkB,EAAUC,KAAa;IAAzC,KAAAD,EAAE,GAAFA,EAAE;IAA0B,KAAAC,KAAK,GAALA,KAAK;IAFrD,KAAAC,QAAQ,GAAe,EAAE;IAGvB,IAAI,CAACF,EAAE,CAACG,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MAC5C;MACA,IAAI,CAACH,QAAQ,GAAGG,IAAI;IACtB,CAAC,CAAC;EACJ;;SARWP,oBAAoB;;mBAApBA,MAAoB,EAAAR,EAAA,CAAAgB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAlB,EAAA,CAAAgB,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAApBZ,MAAoB;EAAAa,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVjC3B,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,oBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACtBH,EAAA,CAAAC,cAAA,SAAI;MACFD,EAAA,CAAA6B,UAAA,IAAAC,mCAAA,iBAEM;MACR9B,EAAA,CAAAG,YAAA,EAAK;;;MAHsBH,EAAA,CAAAI,SAAA,GAAW;MAAXJ,EAAA,CAAA+B,UAAA,YAAAH,GAAA,CAAAhB,QAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}