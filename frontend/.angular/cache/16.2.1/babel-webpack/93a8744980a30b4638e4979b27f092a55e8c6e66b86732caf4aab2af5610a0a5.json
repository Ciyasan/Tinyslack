{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Service/channel.service\";\nimport * as i3 from \"src/app/Service/message.service\";\nfunction ChannelComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-change-channel\", 3);\n    i0.ɵɵelementStart(2, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ChannelComponent_div_6_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.delete());\n    });\n    i0.ɵɵtext(3, \"Supprimer\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"actualChannel\", ctx_r0.canal);\n  }\n}\nfunction ChannelComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-message\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"msg\", message_r4);\n  }\n}\nexport class ChannelComponent {\n  constructor(ar, cs, ms) {\n    this.ar = ar;\n    this.cs = cs;\n    this.ms = ms;\n    this.messagesFromChannel = [];\n    // récupérer le name qui est dans l'URL pour afficher le channel correspondant\n    let name = this.ar.snapshot.params['name'];\n    this.cs.getChannelByName(name).subscribe(data => {\n      console.log(data);\n      this.canal = data;\n      //récupérer les messages liés à ce canal\n      this.ms.getMessagesFromChannel(this.canal).subscribe(messagesList => {\n        console.log(messagesList);\n        this.messagesFromChannel = messagesList;\n      });\n    });\n  }\n}\n_class = ChannelComponent;\n_class.ɵfac = function ChannelComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ChannelService), i0.ɵɵdirectiveInject(i3.MessageService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-channel\"]],\n  decls: 10,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [1, \"scroll\"], [4, \"ngFor\", \"ngForOf\"], [3, \"actualChannel\"], [3, \"click\"], [3, \"msg\"]],\n  template: function ChannelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, ChannelComponent_div_6_Template, 4, 1, \"div\", 0);\n      i0.ɵɵelement(7, \"div\", 1);\n      i0.ɵɵtemplate(8, ChannelComponent_div_8_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelement(9, \"app-create-message\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.canal.channelName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.canal.channelDescription);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Cr\\u00E9ateur: \", ctx.canal.user.userName, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentUser.userId == ctx.canal.user.userId);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messagesFromChannel);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵlistener","ChannelComponent_div_6_Template_button_click_2_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","delete","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","canal","message_r4","ChannelComponent","constructor","ar","cs","ms","messagesFromChannel","name","snapshot","params","getChannelByName","subscribe","data","console","log","getMessagesFromChannel","messagesList","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ChannelService","i3","MessageService","selectors","decls","vars","consts","template","ChannelComponent_Template","rf","ctx","ɵɵtemplate","ChannelComponent_div_6_Template","ChannelComponent_div_8_Template","ɵɵtextInterpolate","channelName","channelDescription","ɵɵtextInterpolate1","user","userName","currentUser","userId"],"sources":["C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\channel\\channel.component.ts","C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\channel\\channel.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Channel } from 'src/app/Model/channel';\r\nimport { Message } from 'src/app/Model/message';\r\nimport { ChannelService } from 'src/app/Service/channel.service';\r\nimport { MessageService } from 'src/app/Service/message.service';\r\n\r\n@Component({\r\n  selector: 'app-channel',\r\n  templateUrl: './channel.component.html',\r\n  styleUrls: ['./channel.component.css'],\r\n})\r\nexport class ChannelComponent {\r\n  canal!: Channel;\r\n\r\n  messagesFromChannel: Message[] = [];\r\n\r\n  constructor(\r\n    private ar: ActivatedRoute,\r\n    private cs: ChannelService,\r\n    private ms: MessageService,\r\n  ) {\r\n    // récupérer le name qui est dans l'URL pour afficher le channel correspondant\r\n    let name = this.ar.snapshot.params['name'];\r\n    this.cs.getChannelByName(name).subscribe((data: any) => {\r\n      console.log(data);\r\n      this.canal = data;\r\n\r\n      //récupérer les messages liés à ce canal\r\n      this.ms.getMessagesFromChannel(this.canal).subscribe((messagesList) => {\r\n        console.log(messagesList);\r\n        this.messagesFromChannel = messagesList;\r\n      });\r\n    });\r\n  }\r\n}\r\n","<h3>{{ canal.channelName }}</h3>\r\n<p>{{ canal.channelDescription }}</p>\r\n<p>Créateur: {{ canal.user.userName }}</p>\r\n<div *ngIf=\"currentUser.userId == canal.user.userId\">\r\n  <app-change-channel [actualChannel]=\"canal\"></app-change-channel>\r\n  <button (click)=\"delete()\">Supprimer</button>\r\n</div>\r\n<div class=\"scroll\"></div>\r\n<div *ngFor=\"let message of messagesFromChannel\">\r\n  <app-message [msg]=\"message\"></app-message>\r\n</div>\r\n<app-create-message></app-create-message>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}