{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Service/channel.service\";\nimport * as i3 from \"src/app/Service/message.service\";\nimport * as i4 from \"src/app/Service/user.service\";\nfunction ChannelViewComponent_app_channel_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-channel\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"canal\", ctx_r0.canal);\n  }\n}\nexport class ChannelViewComponent {\n  constructor(ar, cs, ms, activeRoute, us) {\n    this.ar = ar;\n    this.cs = cs;\n    this.ms = ms;\n    this.activeRoute = activeRoute;\n    this.us = us;\n    this.messagesFromChannel = [];\n  }\n  ngOnInit() {\n    this.activeRoute.paramMap.subscribe(params => {\n      let user = this.us.getCurrentUser();\n      if (user) {\n        this.currentUser = user;\n      }\n      // récupérer le name en URL pour récupérer le canal associé\n      let name = params.get('name');\n      if (name) {\n        this.cs.getChannelByName(name).subscribe(data => {\n          this.canal = data;\n        });\n      }\n    });\n  }\n}\n_class = ChannelViewComponent;\n_class.ɵfac = function ChannelViewComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ChannelService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i4.UserService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-channel-view\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"canal\", 4, \"ngIf\"], [3, \"canal\"]],\n  template: function ChannelViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ChannelViewComponent_app_channel_0_Template, 1, 1, \"app-channel\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.canal);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","canal","ChannelViewComponent","constructor","ar","cs","ms","activeRoute","us","messagesFromChannel","ngOnInit","paramMap","subscribe","params","user","getCurrentUser","currentUser","name","get","getChannelByName","data","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ChannelService","i3","MessageService","i4","UserService","selectors","decls","vars","consts","template","ChannelViewComponent_Template","rf","ctx","ɵɵtemplate","ChannelViewComponent_app_channel_0_Template"],"sources":["C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\channel-view\\channel-view.component.ts","C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\channel-view\\channel-view.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Channel } from 'src/app/Model/channel';\r\nimport { Message } from 'src/app/Model/message';\r\nimport { User } from 'src/app/Model/user';\r\nimport { ChannelService } from 'src/app/Service/channel.service';\r\nimport { MessageService } from 'src/app/Service/message.service';\r\nimport { UserService } from 'src/app/Service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-channel-view',\r\n  templateUrl: './channel-view.component.html',\r\n  styleUrls: ['./channel-view.component.css'],\r\n})\r\nexport class ChannelViewComponent {\r\n  canal!: Channel;\r\n  currentUser!: User;\r\n  messagesFromChannel: Message[] = [];\r\n\r\n  constructor(\r\n    private ar: ActivatedRoute,\r\n    private cs: ChannelService,\r\n    private ms: MessageService,\r\n    private activeRoute: ActivatedRoute,\r\n    private us: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activeRoute.paramMap.subscribe((params: ParamMap) => {\r\n      let user = this.us.getCurrentUser();\r\n      if (user) {\r\n        this.currentUser = user;\r\n      }\r\n\r\n      // récupérer le name en URL pour récupérer le canal associé\r\n      let name = params.get('name');\r\n      if (name) {\r\n        this.cs.getChannelByName(name).subscribe((data: any) => {\r\n          this.canal = data;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}","<app-channel *ngIf=\"canal\" [canal]=\"canal\"></app-channel>"],"mappings":";;;;;;;;ICAAA,EAAA,CAAAC,SAAA,qBAAyD;;;;IAA9BD,EAAA,CAAAE,UAAA,UAAAC,MAAA,CAAAC,KAAA,CAAe;;;ADc1C,OAAM,MAAOC,oBAAoB;EAK/BC,YACUC,EAAkB,EAClBC,EAAkB,EAClBC,EAAkB,EAClBC,WAA2B,EAC3BC,EAAe;IAJf,KAAAJ,EAAE,GAAFA,EAAE;IACF,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,EAAE,GAAFA,EAAE;IAPZ,KAAAC,mBAAmB,GAAc,EAAE;EAQhC;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACH,WAAW,CAACI,QAAQ,CAACC,SAAS,CAAEC,MAAgB,IAAI;MACvD,IAAIC,IAAI,GAAG,IAAI,CAACN,EAAE,CAACO,cAAc,EAAE;MACnC,IAAID,IAAI,EAAE;QACR,IAAI,CAACE,WAAW,GAAGF,IAAI;;MAGzB;MACA,IAAIG,IAAI,GAAGJ,MAAM,CAACK,GAAG,CAAC,MAAM,CAAC;MAC7B,IAAID,IAAI,EAAE;QACR,IAAI,CAACZ,EAAE,CAACc,gBAAgB,CAACF,IAAI,CAAC,CAACL,SAAS,CAAEQ,IAAS,IAAI;UACrD,IAAI,CAACnB,KAAK,GAAGmB,IAAI;QACnB,CAAC,CAAC;;IAEN,CAAC,CAAC;EACJ;;SA5BWlB,oBAAoB;;mBAApBA,MAAoB,EAAAL,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA1B,EAAA,CAAAwB,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAA5B,EAAA,CAAAwB,iBAAA,CAAAK,EAAA,CAAAC,cAAA,GAAA9B,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA1B,EAAA,CAAAwB,iBAAA,CAAAO,EAAA,CAAAC,WAAA;AAAA;;QAApB3B,MAAoB;EAAA4B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCdjCvC,EAAA,CAAAyC,UAAA,IAAAC,2CAAA,yBAAyD;;;MAA3C1C,EAAA,CAAAE,UAAA,SAAAsC,GAAA,CAAApC,KAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}