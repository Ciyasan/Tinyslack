{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Service/channel.service\";\nimport * as i3 from \"src/app/Service/message.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../message/message.component\";\nimport * as i6 from \"../create-message/create-message.component\";\nfunction ChannelComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-message\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"msg\", message_r1);\n  }\n}\nexport class ChannelComponent {\n  constructor(ar, cs, ms) {\n    this.ar = ar;\n    this.cs = cs;\n    this.ms = ms;\n    this.messagesFromChannel = [];\n    // récupérer le name qui est dans l'URL pour afficher le channel correspondant\n    let name = this.ar.snapshot.params['name'];\n    this.cs.getChannelByName(name).subscribe(data => {\n      console.log(data);\n      this.canal = data;\n      //récupérer les messages liés à ce canal\n      this.ms.getMessagesFromChannel(this.canal).subscribe(messagesList => {\n        console.log(messagesList);\n        this.messagesFromChannel = messagesList;\n      });\n    });\n  }\n}\n_class = ChannelComponent;\n_class.ɵfac = function ChannelComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ChannelService), i0.ɵɵdirectiveInject(i3.MessageService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-channel\"]],\n  decls: 9,\n  vars: 4,\n  consts: [[1, \"scroll\"], [4, \"ngFor\", \"ngForOf\"], [3, \"msg\"]],\n  template: function ChannelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 0);\n      i0.ɵɵtemplate(7, ChannelComponent_div_7_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"app-create-message\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.canal.channelName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.canal.description);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Cr\\u00E9ateur: \", ctx.canal.user.userName, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messagesFromChannel);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.MessageComponent, i6.CreateMessageComponent],\n  styles: [\".scroll[_ngcontent-%COMP%] {\\n  overflow: auto;\\n  max-height: 90%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2NoYW5uZWwvY2hhbm5lbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGVBQWU7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIuc2Nyb2xsIHtcclxuICBvdmVyZmxvdzogYXV0bztcclxuICBtYXgtaGVpZ2h0OiA5MCU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","message_r1","ChannelComponent","constructor","ar","cs","ms","messagesFromChannel","name","snapshot","params","getChannelByName","subscribe","data","console","log","canal","getMessagesFromChannel","messagesList","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ChannelService","i3","MessageService","selectors","decls","vars","consts","template","ChannelComponent_Template","rf","ctx","ɵɵtext","ɵɵtemplate","ChannelComponent_div_7_Template","ɵɵtextInterpolate","channelName","description","ɵɵtextInterpolate1","user","userName"],"sources":["C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\channel\\channel.component.ts","C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\channel\\channel.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Channels } from 'src/app/Model/channels';\r\nimport { Messages } from 'src/app/Model/messages';\r\nimport { ChannelService } from 'src/app/Service/channel.service';\r\nimport { MessageService } from 'src/app/Service/message.service';\r\n\r\n@Component({\r\n  selector: 'app-channel',\r\n  templateUrl: './channel.component.html',\r\n  styleUrls: ['./channel.component.css'],\r\n})\r\nexport class ChannelComponent {\r\n  canal!: Channels;\r\n\r\n  messagesFromChannel: Messages[] = [];\r\n\r\n  constructor(\r\n    private ar: ActivatedRoute,\r\n    private cs: ChannelService,\r\n    private ms: MessageService\r\n  ) {\r\n    // récupérer le name qui est dans l'URL pour afficher le channel correspondant\r\n    let name = this.ar.snapshot.params['name'];\r\n    this.cs.getChannelByName(name).subscribe((data: any) => {\r\n      console.log(data);\r\n      this.canal = data;\r\n\r\n      //récupérer les messages liés à ce canal\r\n      this.ms.getMessagesFromChannel(this.canal).subscribe((messagesList) => {\r\n        console.log(messagesList);\r\n        this.messagesFromChannel = messagesList;\r\n      });\r\n    });\r\n  }\r\n}","<h3>{{ canal.channelName }}</h3>\r\n<p>{{ canal.description }}</p>\r\n<p>Créateur: {{ canal.user.userName }}</p>\r\n<div class=\"scroll\">\r\n  <div *ngFor=\"let message of messagesFromChannel\">\r\n    <app-message [msg]=\"message\"></app-message>\r\n  </div>\r\n</div>\r\n<app-create-message></app-create-message>\r\n"],"mappings":";;;;;;;;;;ICIEA,EAAA,CAAAC,cAAA,UAAiD;IAC/CD,EAAA,CAAAE,SAAA,qBAA2C;IAC7CF,EAAA,CAAAG,YAAA,EAAM;;;;IADSH,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAK,UAAA,QAAAC,UAAA,CAAe;;;ADOhC,OAAM,MAAOC,gBAAgB;EAK3BC,YACUC,EAAkB,EAClBC,EAAkB,EAClBC,EAAkB;IAFlB,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,EAAE,GAAFA,EAAE;IALZ,KAAAC,mBAAmB,GAAe,EAAE;IAOlC;IACA,IAAIC,IAAI,GAAG,IAAI,CAACJ,EAAE,CAACK,QAAQ,CAACC,MAAM,CAAC,MAAM,CAAC;IAC1C,IAAI,CAACL,EAAE,CAACM,gBAAgB,CAACH,IAAI,CAAC,CAACI,SAAS,CAAEC,IAAS,IAAI;MACrDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,KAAK,GAAGH,IAAI;MAEjB;MACA,IAAI,CAACP,EAAE,CAACW,sBAAsB,CAAC,IAAI,CAACD,KAAK,CAAC,CAACJ,SAAS,CAAEM,YAAY,IAAI;QACpEJ,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC;QACzB,IAAI,CAACX,mBAAmB,GAAGW,YAAY;MACzC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;SAtBWhB,gBAAgB;;mBAAhBA,MAAgB,EAAAP,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA1B,EAAA,CAAAwB,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAA5B,EAAA,CAAAwB,iBAAA,CAAAK,EAAA,CAAAC,cAAA;AAAA;;QAAhBvB,MAAgB;EAAAwB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ7BrC,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAuC,MAAA,GAAuB;MAAAvC,EAAA,CAAAG,YAAA,EAAK;MAChCH,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAuC,MAAA,GAAuB;MAAAvC,EAAA,CAAAG,YAAA,EAAI;MAC9BH,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAuC,MAAA,GAAmC;MAAAvC,EAAA,CAAAG,YAAA,EAAI;MAC1CH,EAAA,CAAAC,cAAA,aAAoB;MAClBD,EAAA,CAAAwC,UAAA,IAAAC,+BAAA,iBAEM;MACRzC,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAE,SAAA,yBAAyC;;;MARrCF,EAAA,CAAAI,SAAA,GAAuB;MAAvBJ,EAAA,CAAA0C,iBAAA,CAAAJ,GAAA,CAAAjB,KAAA,CAAAsB,WAAA,CAAuB;MACxB3C,EAAA,CAAAI,SAAA,GAAuB;MAAvBJ,EAAA,CAAA0C,iBAAA,CAAAJ,GAAA,CAAAjB,KAAA,CAAAuB,WAAA,CAAuB;MACvB5C,EAAA,CAAAI,SAAA,GAAmC;MAAnCJ,EAAA,CAAA6C,kBAAA,oBAAAP,GAAA,CAAAjB,KAAA,CAAAyB,IAAA,CAAAC,QAAA,KAAmC;MAEX/C,EAAA,CAAAI,SAAA,GAAsB;MAAtBJ,EAAA,CAAAK,UAAA,YAAAiC,GAAA,CAAA1B,mBAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}