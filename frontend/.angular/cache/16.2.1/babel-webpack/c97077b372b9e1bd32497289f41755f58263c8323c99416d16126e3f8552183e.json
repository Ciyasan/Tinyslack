{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Service/user.service\";\nimport * as i3 from \"src/app/Service/message.service\";\nimport * as i4 from \"@angular/router\";\nfunction ChangeMessageComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Ecrivez un message\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ChangeMessageComponent {\n  constructor(fb, userService, ms, ar, route) {\n    this.fb = fb;\n    this.userService = userService;\n    this.ms = ms;\n    this.ar = ar;\n    this.route = route;\n    // récupérer le user de la session en cours\n    this.currentUser = this.userService.getCurrentUser();\n    this.messageModificationForm = this.fb.group({\n      messageContent: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.messageModificationForm.controls['messageContent'].setValue(this.actualMessage.messageContent);\n  }\n  updatemessage(event) {\n    // si l'utilisateur est connecté et qu'il est le créateur du message, on effectue la modification du message\n    if (this.currentUser) {\n      const modifiedmessage = {\n        messageId: this.actualMessage.messageId,\n        messageContent: this.messageModificationForm.value.messageContent,\n        messageDate: new Date(),\n        user: this.actualMessage.user,\n        channel: this.actualMessage.channel\n      };\n      console.log(modifiedmessage);\n      this.ms.patchMessage(modifiedmessage).subscribe(response => {\n        console.log('Réponse du serveur :', response);\n        alert('Votre message a bien été modifié');\n        this.route.navigate(['/channel/' + this.actualMessage.channel.channelName]);\n      });\n    }\n    // sinon, on le redirige vers la page de connexion\n    else {\n      alert('Veuillez vous connecter');\n      this.route.navigate(['/login']);\n    }\n  }\n}\n_class = ChangeMessageComponent;\n_class.ɵfac = function ChangeMessageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-change-message\"]],\n  inputs: {\n    actualMessage: \"actualMessage\"\n  },\n  decls: 7,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"submit\"], [\"type\", \"text\", \"id\", \"messageContent\", \"name\", \"messageContent\", \"formControlName\", \"messageContent\", \"placeholder\", \"Ecrivez votre message\"], [4, \"ngIf\"], [3, \"disabled\"]],\n  template: function ChangeMessageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function ChangeMessageComponent_Template_form_submit_0_listener($event) {\n        return ctx.updatemessage($event);\n      });\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵtemplate(2, ChangeMessageComponent_div_2_Template, 3, 0, \"div\", 2);\n      i0.ɵɵelement(3, \"br\")(4, \"br\");\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵtext(6, \"Modifier\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      i0.ɵɵproperty(\"formGroup\", ctx.messageModificationForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.messageModificationForm.get(\"messageContent\")) == null ? null : tmp_1_0.hasError(\"required\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.messageModificationForm.invalid);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ChangeMessageComponent","constructor","fb","userService","ms","ar","route","currentUser","getCurrentUser","messageModificationForm","group","messageContent","required","ngOnInit","controls","setValue","actualMessage","updatemessage","event","modifiedmessage","messageId","value","messageDate","Date","user","channel","console","log","patchMessage","subscribe","response","alert","navigate","channelName","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","i3","MessageService","i4","ActivatedRoute","Router","selectors","inputs","decls","vars","consts","template","ChangeMessageComponent_Template","rf","ctx","ɵɵlistener","ChangeMessageComponent_Template_form_submit_0_listener","$event","ɵɵelement","ɵɵtemplate","ChangeMessageComponent_div_2_Template","ɵɵproperty","ɵɵadvance","tmp_1_0","get","hasError","invalid"],"sources":["C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\change-message\\change-message.component.ts","C:\\Users\\ciyas\\Desktop\\formation_java\\ProjetJury\\FrontEndCertif\\src\\app\\component\\change-message\\change-message.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Message } from 'src/app/Model/message';\r\nimport { User } from 'src/app/Model/user';\r\nimport { MessageService } from 'src/app/Service/message.service';\r\nimport { UserService } from 'src/app/Service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-change-message',\r\n  templateUrl: './change-message.component.html',\r\n  styleUrls: ['./change-message.component.css'],\r\n})\r\nexport class ChangeMessageComponent {\r\n  @Input() actualMessage!: Message;\r\n\r\n  messageModificationForm: FormGroup;\r\n  currentUser: User | null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private ms: MessageService,\r\n    private ar: ActivatedRoute,\r\n    private route: Router\r\n  ) {\r\n    // récupérer le user de la session en cours\r\n    this.currentUser = this.userService.getCurrentUser();\r\n\r\n    this.messageModificationForm = this.fb.group({\r\n      messageContent: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.messageModificationForm.controls['messageContent'].setValue(\r\n      this.actualMessage.messageContent\r\n    );\r\n  }\r\n\r\n  updatemessage(event: Event) {\r\n    // si l'utilisateur est connecté et qu'il est le créateur du message, on effectue la modification du message\r\n    if (this.currentUser) {\r\n      const modifiedmessage = {\r\n        messageId: this.actualMessage.messageId,\r\n        messageContent: this.messageModificationForm.value.messageContent,\r\n        messageDate: new Date(),\r\n        user: this.actualMessage.user,\r\n        channel: this.actualMessage.channel,\r\n      };\r\n      console.log(modifiedmessage);\r\n      this.ms.patchMessage(modifiedmessage).subscribe((response) => {\r\n        console.log('Réponse du serveur :', response);\r\n        alert('Votre message a bien été modifié');\r\n        this.route.navigate(['/channel/' + this.actualMessage.channel.channelName])\r\n      });\r\n    }\r\n    // sinon, on le redirige vers la page de connexion\r\n    else {\r\n      alert('Veuillez vous connecter');\r\n      this.route.navigate(['/login']);\r\n    }\r\n  }\r\n}","<form [formGroup]=\"messageModificationForm\" (submit)=\"updatemessage($event)\">\r\n  <input\r\n    type=\"text\"\r\n    id=\"messageContent\"\r\n    name=\"messageContent\"\r\n    formControlName=\"messageContent\"\r\n    placeholder=\"Ecrivez votre message\"\r\n  />\r\n  <div\r\n    *ngIf=\"messageModificationForm.get('messageContent')?.hasError('required')\"\r\n  >\r\n    <p>Ecrivez un message</p>\r\n  </div>\r\n  <br /><br />\r\n  <button [disabled]=\"messageModificationForm.invalid\">Modifier</button>\r\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}